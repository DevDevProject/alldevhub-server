<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.jobservice.mapper.JobRecruitDetailMapper">
    <insert id="insert" parameterType="com.example.jobservice.vo.JobRecruitDetail" useGeneratedKeys="true" keyProperty="id">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO job_recruit_detail (responsibility, requirement, preference, benefit, process, job_recruit_id)
        VALUES (#{responsibility}, #{requirement}, #{preference}, #{benefit}, #{process}, #{jobRecruitId})
    </insert>

    <select id="findRecruitDetail" resultType="com.example.jobservice.dto.recruit.response.data.RecruitDetailDataDto">
        SELECT responsibility, requirement, preference, benefit, process
        FROM job_recruit_detail as jrd
        WHERE jrd.job_recruit_id = #{recruitId}
    </select>

    <select id="findRecruitOptions" resultType="com.example.jobservice.dto.recruit.response.data.RecruitOptionsDataDto">
        SELECT
            jr.title,
            jr.url,
            jr.deadline,
            jr.work_experience AS experience,
            t.name AS type,
            d.name AS department,
            GROUP_CONCAT(c.name SEPARATOR ', ') AS category
        FROM job_recruit jr
                 LEFT JOIN type t ON jr.type_id = t.id
                 LEFT JOIN department d ON jr.department_id = d.id
                 LEFT JOIN job_recruit_category jrc ON jr.id = jrc.job_recruit_id
                 LEFT JOIN category c ON jrc.category_id = c.id
        WHERE jr.id = #{recruitId}
        GROUP BY jr.id
    </select>
</mapper>